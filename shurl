#!/bin/bash

# NEXT STEPS:
# Error checking, tests, initialization
# Create public repo on Github
# New documentation

if [ "$1" == "" -o "$1" == "-h" -o "$1" == "--help" ]; then
	echo "Usage: $0 [LONG URL TO SHORTEN]"
	exit 1
fi
URL_TO_SHORTEN="$1"

# process config file
CFG=~/.shurl
if [[ -f $CFG ]]
	then

	for param in SHORTENER_BASE SSH_ADDRESS HTACCESS_PATH
	do
		$val=`grep ^$param= $CFG | sed 's/$param=//' | head -1`
		if [ "$val" == "" ]
			then
			echo "Please set config param $param in $CFG"
			exit 1
		fi
		$param=$val
	done
	
	#fixme: check that each of the param values actually works
		
else
	
	echo "Configuration file $CFG not found."
	echo
	echo "You must be new here. To get started, edit $CFG."
	
	echo "
	
# This is the configuration file for shurl. See
# http://https://github.com/lucasgonze/shurl

# The public URL at which your shortener will be hosted. Must end with a slash.
# The short slug for each long URL will be appended.
#SHORTENER_BASE=http://your.shortener.com/

# SSH address for your web server
#SSH_ADDRESS=username@example.com

# Path to .htaccess in your web server's file system. Your SSH
# account must have write permissions to it. It must have been
# initialized to hold "RewriteEngine On". This script will append
# to the .htaccess file. Obviously, this assumes Apache.
#HTACCESS_PATH=/home/username/your.shortener.com/.htaccess	
	" > $CFG

	exit 1
fi

#
#  generate a random post slug:
#  checks for a 404 on that post slug on the shortener web server
#  if not a 404, loop until 404 found
#

function check_slug_uniqueness {
	local count_of_404s=`curl --silent -I $1 | head -1 | grep "404 Not Found" | wc -l | sed 's/[^0-9]//g'`
	expr $count_of_404s = 1
	return $?
}

function generate_random_slug {
	local chars="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local chars_len=`echo -n $chars | wc -c`
	local slug
	for i in {1..5}
	do 
		rand_char_int=`expr $RANDOM % $chars_len`
		rand_char=`echo $chars | cut -c $rand_char_int`
		slug="$slug""$rand_char"
	done
	echo $slug	
}

SLUG=`generate_random_slug`
SHORTENED="$SHORTENER_BASE$SLUG"
until [[ `check_slug_uniqueness $SHORTENER_BASE` ]]; do
	SLUG=`generate_random_slug`
	SHORTENED="$SHORTENER_BASE/$SLUG"
done

#
# . append shortened URL to .htaccess:
#  ssh to server
#  append rewrite rule to .htaccess
#

found=`ssh "$SSH_ADDRESS" "grep '$URL_TO_SHORTEN' '$HTACCESS_PATH'"`
if [ $? == 0 ]
	then
	# We found a saved URL for this item. Show it.
	# 14 is the char position after "RewriteRule ^". 18 is last char in saved stub.
	# head -1 is in case there are more than one previously saved versions
	saved=`echo "$found" | head -1 | cut -c 14-18`
	echo "$SHORTENER_BASE$saved"
else
	# This URL hasn't yet been saved. Add it.
	rule="RewriteRule ^$SLUG\$ $URL_TO_SHORTEN [R,L]"
	ssh "$SSH_ADDRESS" "echo '$rule' >> '$HTACCESS_PATH'"

	if [[ $? == 0 ]]; then
		echo $SHORTENED
	else
		echo "SSH failure"
		exit 1
	fi

fi



